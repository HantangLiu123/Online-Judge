{
    "id": "p016",
    "title": "Letter Combinations of a Phone Number",
    "description": "Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent.",
    "input_description": "A single line containing the digits string.",
    "output_description": "All possible letter combinations, each on a separate line.",
    "samples": [
        {
            "input": "23",
            "output": "ad\nae\naf\nbd\nbe\nbf\ncd\nce\ncf"
        },
        {
            "input": "",
            "output": ""
        }
    ],
    "constraints": "0 <= digits.length <= 4\ndigits[i] is a digit in the range ['2', '9'].",
    "testcases": [
        {
            "input": "23",
            "output": "ad\nae\naf\nbd\nbe\nbf\ncd\nce\ncf"
        },
        {
            "input": "",
            "output": ""
        },
        {
            "input": "2",
            "output": "a\nb\nc"
        }
    ],
    "hint": "Use backtracking to generate all possible combinations recursively.",
    "source": "LeetCode",
    "tags": [
        "string",
        "backtracking"
    ],
    "time_limit": 1.0,
    "memory_limit": 256,
    "author": "LeetCode",
    "difficulty": "medium"
}